@model FireTest.Models.IndexViewModel
@Styles.Render("~/Content/manage")
@{
    ViewBag.Title = "Управление учетной записью";
}
<p class="text-success">@ViewBag.StatusMessage</p>
<div class="row">
    <div class="col-4 manageAvatar">
        <img src="@Html.Raw(Model.Avatar)" alt="Аватар пользователя: @Model.Name" />
        @if (ViewBag.Editable)
        {
            using (Ajax.BeginForm("AvatarUpload", new AjaxOptions
            {
                HttpMethod = "GET",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "popup_avatar",
                LoadingElementId = "loadingIndicator",
            }))
            {
                <input type="submit" class="button-Cancel center" value="Изменить фотографию" />
            }
        }
    </div>
    <div class="col-8 manageDisabled">
            @using (Html.BeginForm("Index", "Manage", FormMethod.Post, new { role = "form", id = "edit" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    @Html.LabelFor(m => m.Name, new { @class = "col-4" })
                    <div class="col-8">
                        @if (ViewBag.Editable)
                        {
                            @Html.TextBoxFor(m => m.Name)
                            <span class="pen"></span>
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DisplayTextFor(m => m.Name)
                        }
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.SubName, new { @class = "col-4" })
                    <div class="col-8">
                        @if (ViewBag.Editable)
                        {
                            @Html.TextBoxFor(m => m.SubName)
                            <span class="pen"></span>
                            @Html.ValidationMessageFor(m => m.SubName, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DisplayTextFor(m => m.SubName)
                        }
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Family, new { @class = "col-4" })
                    <div class="col-8">
                        @if (ViewBag.Editable)
                        {
                            @Html.TextBoxFor(m => m.Family)
                            <span class="pen"></span>
                            @Html.ValidationMessageFor(m => m.Family, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DisplayTextFor(m => m.Family)
                        }
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Year, new { @class = "col-4" })
                    <div class="col-8">
                        @if (ViewBag.Editable)
                        {
                            @Html.TextBoxFor(m => m.Year)
                            <span class="pen"></span>
                            @Html.ValidationMessageFor(m => m.Year, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DisplayTextFor(m => m.Year)
                        }
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Age, new { @class = "col-4" })
                    <div class="col-8">
                        @if (ViewBag.Editable)
                        {
                            @Html.TextBoxFor(m => m.Age)
                            <span class="pen"></span>
                            @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DisplayTextFor(m => m.Age)
                        }
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.Sex, new { @class = "col-4" })
                    <div class="col-8">
                        @if (ViewBag.Editable)
                        {
                            <input id="SexM" type="radio" name="Sex" value="true" @(Model.Sex ? "checked" : "")/>
                            <label for="SexM"><span>М</span></label>
                            <input id="SexF" type="radio" name="Sex" value="false" @(Model.Sex ? "" : "checked")/>
                            <label for="SexF"><span>Ж</span></label>
                        }
                        else
                        {
                            <input type="radio" name="Sex" value="true" checked />
                            <label for="SexM"><span>@(Model.Sex ? "М" : "Ж")</span></label>
                        }
                    </div>
                </div>
                if (ViewBag.Editable && Model.Group != "Преподаватель")
                {
                    <div class="row">
                        @Html.LabelFor(m => m.Group, new { @class = "col-4" })
                        <div class="col-8">
                            @Html.TextBoxFor(m => m.Group)
                            <span class="pen"></span>
                            @Html.ValidationMessageFor(m => m.Group, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        @Html.LabelFor(m => m.Faculty, new { @class = "col-4" })
                        <div class="col-8">
                            @Html.DropDownListFor(m => m.Faculty, Model.FacultyOptions)
                        </div>
                    </div>
                    <div class="row">
                        @Html.LabelFor(m => m.Region, new { @class = "col-4" })
                        <div class="col-8">
                            @Html.DropDownListFor(m => m.Region, Model.RegionOptions)
                        </div>
                    </div>
                    @*<div class="row">
                        @Html.LabelFor(m => m.Speciality, new { @class = "col-4" })
                        <div class="col-8">
                            @Html.DropDownListFor(m => m.Speciality, Model.SpecialityOptions)
                        </div>
                    </div>*@
                }
                else
                {   
                    @Html.Hidden("Group", "-1")
                    @Html.Hidden("Region", "0")
                    @Html.Hidden("Faculty", "0")
                    @*@Html.Hidden("Speciality", "0")*@
                    <div class="row">
                        @Html.LabelFor(m => m.Group, new { @class = "col-4" })
                        <div class="col-8">
                            @Model.Group
                        </div>
                    </div>
                }
                if (ViewBag.Editable)
                {
                    <div class="row center">
                        <input type="submit" class="button" value="Сохранить изменения" />
                    </div>
                }
                <div class="row center">
                    <a href="ChangePassword" class="button-Cancel">Изменить пароль</a>
                </div>
            }
    </div>
</div>
<div id="popup_avatar"></div>
@section scripts
{
    @Scripts.Render("~/bundles/jquerymask")
    <script>
        $("#Year").inputmask("9999");
        $("#Age").inputmask("9999");
        $("#Year").focusout(function (e) {
            var year = $("#Year").val();
            if (year <= 1966) {
                $("#Year").val(1966);
            }
            if (year >= @DateTime.Now.Year)  {
                $("#Year").val(@DateTime.Now.Year);
            }
        });
    </script>
}