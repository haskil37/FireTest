@model PagedList.IPagedList<FireTest.Models.IssueViewModel>
@using PagedList.Mvc;
@using (Ajax.BeginForm("IndexIssues", new AjaxOptions
{
    HttpMethod = "Get",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "Issues",
}))
{
    if (Model.Count() > 0)
    {
        @Html.Hidden("page", (int)Model.PageNumber)
        <div>
            Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("IndexIssues",
            new { page }),
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "Issues" }))
        </div>
        <div class="row">
            @foreach (var item in Model)
            {
                <table>
                    <tr>
                        <td colspan="3">
                            Запрос от
                            <img class="avatar-mini" src="~/Images/Avatars/@Html.DisplayFor(modelItem => item.UserAvatar)" />
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                    </tr>
                    <tr>
                        <td width="33.3%">Вопрос</td>
                        <td width="33.3%">Проблема</td>
                        <td width="33.3%">Кто решает</td>
                    </tr>
                    <tr>
                        <td>
                            Дисциплина - @Html.DisplayFor(modelItem => item.QuestionSubject)
                            <hr />
                            @Html.DisplayFor(modelItem => item.Question.QuestionText)
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Message)</td>
                        <td class="center">
                            @if (!string.IsNullOrEmpty(item.TeacherName))
                            {
                                <img class="avatar-mini" src="~/Images/Avatars/@Html.DisplayFor(modelItem => item.TeacherAvatar)" />
                                @Html.DisplayFor(modelItem => item.TeacherName)
                                if (ViewBag.TeacherId == item.TeacherId)
                                {
                                    <hr />
                                    <a href="EditQuestion/@item.Question.Id" class="mini-button">
                                        Перейти к вопросу
                                    </a>
                                    <hr />
                                    <a href="IssueComplete/@item.IssueId" class="button-Cancel">
                                        Удалить запрос
                                    </a>
                                    <hr />
                                    <button type="submit" class="issue-button-Cancel" name="submitButton" value="@item.IssueId">Перестать решать</button>
                                }
                            }
                            else
                            {
                                <p>Еще никто не решает данную проблему</p><br />
                                <button type="submit" class="mini-button" name="submitButton" value="@item.IssueId">Взять для решения</button>
                            }
                        </td>
                    </tr>
                </table>
                <br />
            }
        </div>
        <div>
            Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("IndexIssues",
            new { page }),
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "Issues" }))
        </div>
        <script>
            MathJax.Hub.Queue(['Typeset', MathJax.Hub, 'question']);
        </script>
    }
    else
    {
        <div class="row">
            <h3>Запросов пока нет</h3>
        </div>
    }
}