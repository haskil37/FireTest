@model FireTest.Models.ViewCreateQuestion
@{
    ViewBag.Title = "Добавить вопрос";
}
@Styles.Render("~/Content/administrator")
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p class="text-success">@ViewBag.StatusMessage</p>
    <div class="row center">
        <h4>Добавить вопрос</h4>
        <br>
        <div class="row">
            <div class="col-2">
                Кафедра
            </div>
            <div class="col-10">
                @Html.DropDownList("Departments", ViewBag.Departments as SelectList)
            </div>
        </div>
        <div class="row">
            <div class="col-2">
                Дисциплина
            </div>
            <div class="col-10">
                @Html.DropDownList("Subjects", ViewBag.Subjects as SelectList)
            </div>
        </div>
        <div class="row">
            <div class="col-2">
                Курс
            </div>
            <div class="col-10">
                @Html.DropDownList("Courses", ViewBag.Courses as SelectList)
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-2">
                Текст вопроса
            </div>
            <div class="col-10">
                @Html.TextAreaFor(model => model.QuestionText, 5, 20, null)
            </div>
        </div>
        <div class="row">
            <div class="col-2">
                Раздел
            </div>
            <div class="col-10">
                @Html.TextAreaFor(model => model.Tag)
            </div>
        </div>
        <div class="row">
            <div class="type-tabs textback">
                @if (ViewBag.Type == 1)
                {
                    <label for="type-tab-1" class="type-tab active">Обычный вопрос</label>
                }
                else
                {
                    <label for="type-tab-1" class="type-tab">Обычный вопрос</label>
                }
                @if (ViewBag.Type == 2)
                {
                    <label for="type-tab-2" class="type-tab active">Вопрос на последовательность</label>
                }
                else
                {
                    <label for="type-tab-2" class="type-tab">Вопрос на последовательность</label>
                }
                @if (ViewBag.Type == 3)
                {
                    <label for="type-tab-3" class="type-tab active">Вопрос на соответствие</label>
                }
                else
                {
                    <label for="type-tab-3" class="type-tab">Вопрос на соответствие</label>
                }
            </div>
        </div>
        @if (ViewBag.Type == 1)
        {
            <input id="type-tab-1" name="Type" type="radio" checked="checked" class="type-radio" value="1" />
        }
        else
        {
            <input id="type-tab-1" name="Type" type="radio" class="type-radio" value="1" />
        }
        <div class="type-content">
            <div>@Html.ValidationMessageFor(model => model.Answers, "", new { @class = "text-danger" })</div>
            <div>@Html.ValidationMessageFor(model => model.AnswersCorrects, "", new { @class = "text-danger" })</div>
           <div class="row">
                <div class="row text-center">
                    <div class="col-2">
                        № п/п
                    </div>
                    <div class="col-8">
                        Текст ответов
                    </div>
                    <div>
                        Правильный
                    </div>
                </div>                              
                @for (int i = 0; i < 8; i++)
                {
                <div class="row">
                    <div class="col-2">
                        <b>@(i + 1)</b>
                    </div>
                    <div class="col-8">
                        @Html.TextAreaFor(model => model.Answers[i])
                    </div>
                    <div class="col-2 correct">
                        @if (Model != null && Model.AnswersCorrects != null && Model.AnswersCorrects.Contains(i))
                        {
                            <input id="@i" type="checkbox" name="AnswersCorrects" value="@i" checked="checked" />
                        }
                        else
                        {
                            <input id="@i" type="checkbox" name="AnswersCorrects" value="@i" />
                        }
                        <label for="@i"></label>
                    </div>
                </div>
                }
            </div>
        </div>
        @if (ViewBag.Type == 2)
        {
            <input id="type-tab-2" name="Type" type="radio" checked="checked" class="type-radio" value="2" />
        }
        else
        {
            <input id="type-tab-2" name="Type" type="radio" class="type-radio" value="2" />
        }
        <div class="type-content">
            Последовательность
        </div>
        @if (ViewBag.Type == 3)
        {
            <input id="type-tab-3" name="Type" type="radio" checked="checked" class="type-radio" value="3" />
        }
        else
        {
            <input id="type-tab-3" name="Type" type="radio" class="type-radio" value="3" />
        }
        <div class="type-content">
            Соответствие
        </div>
        <div class="row left">
            @Html.Partial("LaTex")
        </div>
        <div class="row">
            <input type="submit" value="Сохранить" class="button" />
        </div>
    </div>
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#formula_text").on("change input paste keyup", function () {
            formula_refresh();
        });
        function formula_text_insert(value) {
            $("#formula_text").val($("#formula_text").val() + value);
            formula_refresh();
        };
        function formula_refresh() {
            $("#formula").html("$$" + $("#formula_text").val() + "$$");
            if ($("#L1").prop("checked")) {
                $("#formula_text_copy").html("$$" + $("#formula_text").val() + "$$");
            }
            else {
                $("#formula_text_copy").html("\\(" + $("#formula_text").val() + "\\)");
            }
            $('[name=TypeLatex]').change(function () {
                if ($("#L1").prop("checked")) {
                    $("#formula_text_copy").html("$$" + $("#formula_text").val() + "$$");
                }
                else {
                    $("#formula_text_copy").html("\\(" + $("#formula_text").val() + "\\)");
                }
            });
            if ($("#formula_text").val() == "") {
                $("#formula_text_copy").html("&nbsp;");
                $("#formula").empty();
            }
            MathJax.Hub.Queue(['Typeset', MathJax.Hub, 'formula']);
        }
        $(".type-tab").click(function () {
            $('.type-tab').removeClass("active");
            $(this).addClass("active");
        });
    </script>
}