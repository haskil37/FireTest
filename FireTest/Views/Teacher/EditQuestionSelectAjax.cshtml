@model PagedList.IPagedList<FireTest.Models.SubjectsAndQualification>
@using PagedList.Mvc;
@using (Ajax.BeginForm("EditQuestionSelectAjax", new AjaxOptions
{
    HttpMethod = "Get",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "Questions",
}))
{
    @Html.Hidden("currentFilter", (string)ViewBag.CurrentFilter)
    @Html.Hidden("Page", (int)ViewBag.Page)
    <div>
        Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("EditQuestionSelectAjax",
                 new { page, currentFilter = ViewBag.CurrentFilter, Tags = Session["Tags"], Subjects = Session["Subjects"] }),
                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "Questions" }))
    </div>
    <div class="row" id="question">
        <table>
            <tr>
                <th>
                    Вопросы
                </th>
                <th>
                    Статистика
                </th>
                    Редактировать
                <th>
                </th>
                @if (ViewBag.Access == true)
                {
                    <th>
                        Входит в уровень подготовки?
                    </th>
                }
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td class="center" width="15%">
                        <span>Сколько раз был задан - @item.Count, отвечен верно - @item.CountCorrect</span>
                    </td>
                    <td class="center" width="15%">
                        <a href="EditQuestion/@item.Id">Редактировать</a>
                    </td>
                    @if (ViewBag.Access == true)
                    {
                        <td class="center" width="15%">
                            @if (item.Qualification == true)
                            {
                                <div class="Yes">
                                    <button type="submit" value="@item.Id" name="submitButton"></button>
                                </div>
                            }
                            else
                            {
                                <div class="No">
                                    <button type="submit" value="@item.Id" name="submitButton"></button>
                                </div>
                            }
                        </td>
                        @*if (item.Qualification == true)
                            {
                                <td class="center" width="15%">
                                    Входит в уровень подготовки: <span class="qualification-color">Да</span>
                                    <hr />
                                    <a href="QuestionQualification/@item.Id">Убрать</a>
                                </td>
                            }
                            else
                            {
                                <td class="center" width="15%">
                                    Входит в уровень подготовки: <span class="qualification-color">Нет</span>
                                    <hr />
                                    <a href="QuestionQualification/@item.Id">Добавить</a>
                                </td>
                            }*@
                    }
                </tr>
            }
        </table>
    </div>
    <div>
        Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("EditQuestionSelectAjax",
                 new { page, currentFilter = ViewBag.CurrentFilter, Tags = Session["Tags"], Subjects = Session["Subjects"] }),
                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "Questions" }))
    </div>
    <script>
        MathJax.Hub.Queue(['Typeset', MathJax.Hub, 'question']);
        $('#Tags').empty();
        $('#Tags').append('@Html.Raw(ViewBag.Tags)');
        $('#Tags').trigger("chosen:updated");
    </script>
}