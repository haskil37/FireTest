@model FireTest.Models.Questions
@{
    ViewBag.Title = "Поединок";
}
@Styles.Render("~/Content/battle")
@Styles.Render("~/Content/audio")
<div class="music">
    <span id="play-button" onclick="Audio_Stop()" class="pause"></span>
    <span id="volume-button" class="volume" onclick="Volume_Off()"></span>
    <input type="range" min="0" max="10" id="volume" oninput="Audio_Volume()" value="5" />
    <audio id="audio" preload="auto" src="~/Content/battle.mp3" loop="loop" autoplay="autoplay" />
</div>
<div class="row">
    <div class="col-5">
        <img class="avatar-mini" src="@ViewBag.FirstPlayerAvatar" />
        <span>@ViewBag.FirstPlayer</span>
    </div>
    <div class="col-2">
        <p id="timer" class="timer center"> </p>
    </div>
    <div class="col-5" style="text-align: right;">
        <img class="avatar-mini" src="@ViewBag.SecondPlayerAvatar" />
        <span>@ViewBag.SecondPlayer</span>
    </div>
</div>
<div class="row" id="FightQuestionsRoW"></div>
<div id="loadingIndicator" style="display:none;">
    <div class="container">
        <div class="wheel"></div>
    </div>
    <h3 class="center">Загрузка</h3>
</div>
@using (Ajax.BeginForm("FightQuestions", new { id = ViewBag.Id }, new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "question",
    LoadingElementId = "loadingIndicator",
}))
{
    @Html.AntiForgeryToken()
    <div id="question">
        <div class="row center">Времени на ответ: <span id="timeElapsed"></span></div>
        <div class="row center"><h3>Вопрос №@ViewBag.Number</h3></div>
        <div class="row"><h3>@Model.QuestionText</h3></div>
        @if (@Model.QuestionImage != null)
        {
            <div class="questionImage center">
                <img src="@Model.QuestionImage" />
            </div>
        }
        <div class="row answers">
            @if (ViewBag.TypeQuestion == "standart")
            {
                <div class="center textback noselect">@ViewBag.Multiple</div>
                foreach (var item in Model.QuestionAnswers)
                {
                    <fieldset class="standart">
                        <input id="@item.AnswerId" type="checkbox" name="AnswersIDs" value="@item.AnswerId" />
                        <label for="@item.AnswerId">
                            <span>
                                @Html.DisplayFor(modelItem => item.AnswerText)
                            </span>
                        </label>
                    </fieldset>
                }
            }
            @if (ViewBag.TypeQuestion == "sequence")
            {
                <div class="center textback noselect">Зажмите левой кнопкой мыши строчку и перетащите</div>
                <ul class="sortable">
                    @foreach (var item in Model.QuestionAnswers)
                    {
                        <li>
                            <fieldset class="sequence">
                                <input id="@item.AnswerId" type="checkbox" name="AnswersIDs" value="@item.AnswerId" checked="checked" />
                                <label for="@item.AnswerId">
                                    <span>
                                        @Html.DisplayFor(modelItem => item.AnswerText)
                                    </span>
                                </label>
                            </fieldset>
                        </li>
                    }
                </ul>
            }
            @if (ViewBag.TypeQuestion == "conformity")
            {
                int step = Model.QuestionAnswers.Count() / 2;
                <div class="center textback noselect">Зажмите левой кнопкой мыши строчку из левого столбца и перетащите</div>
                <div class="col-6">
                    <ol class="sortable">
                        @for (int i = 0; i < step; i++)
                        {
                            <li>
                                <fieldset class="conformity">
                                    <input id="@Model.QuestionAnswers[i].AnswerId" type="checkbox" name="AnswersIDs" value="@Model.QuestionAnswers[i].AnswerId" checked="checked" />
                                    <label for="@Model.QuestionAnswers[i].AnswerId">
                                        <span>
                                            @Html.DisplayFor(modelItem => Model.QuestionAnswers[i].AnswerText)
                                        </span>
                                    </label>
                                </fieldset>
                            </li>
                        }
                    </ol>
                </div>
                <div class="col-offset-6">
                    <ol class="unsortable">
                        @for (int i = step; i < step * 2; i++)
                        {
                            <li>
                                <fieldset>
                                    <input id="@Model.QuestionAnswers[i].AnswerId" type="checkbox" name="AnswersIDs" value="@Model.QuestionAnswers[i].AnswerId" checked="checked" />
                                    <label for="@Model.QuestionAnswers[i].AnswerId" name="AnswersIDs">
                                        <span>
                                            @Html.DisplayFor(modelItem => Model.QuestionAnswers[i].AnswerText)
                                        </span>
                                    </label>
                                </fieldset>
                            </li>
                        }
                    </ol>
                </div>
            }
        </div>
        <input type="submit" class="button center" value="Ответить" id="Answer" />
        <script>
            sec = @ViewBag.Afk;
            document.getElementById('timeElapsed').innerHTML = sec;
            timer_e = setInterval(
                    function () {
                        sec--;
                        if (sec <= 0)
                            sec = 0;
                        document.getElementById('timeElapsed').innerHTML = sec;
                    }, 1000);
            AFKInterval = setInterval(function () {afk()}, @ViewBag.Afk * 1000);
        </script>
    </div>
}
@section scripts
{
    @Scripts.Render("~/bundles/audio")
    <script type="text/javascript">
        MathJax.Hub.Queue(['Typeset', MathJax.Hub, 'question']);
        $('.sortable').sortable();
        window.onload = start_timer();
        var timer;
        function start_timer() {
            if (timer) clearInterval(timer);
            mins = @ViewBag.Min;
            secs = @ViewBag.Sec;
            tmins = '';
            tsecs = '';
            if(mins < 10)
                tmins = '0' + mins;
            else
                tmins = mins;
            if(secs < 10)
                tsecs =  '0' + secs;
            else
                tsecs = secs;
            text = tmins + ':' + tsecs;
            document.getElementById('timer').innerHTML = text;
            timer = setInterval(
	            function () {
	                secs++;
	                if (secs == 60)
	                {
	                    secs = 0;
	                    mins++;
	                }
	                if(mins < 10)
	                    tmins = '0' + mins;
	                else
	                    tmins = mins;
	                if(secs < 10)
	                    tsecs =  '0' + secs;
	                else
	                    tsecs = secs;
	                text = tmins + ':' + tsecs;
	                document.getElementById('timer').innerHTML = text;
	            }, 1000);
        };
        setInterval(function () { $('#FightQuestionsRoW').load('/Battles/FightQuestionsRoW/' + @ViewBag.Id, { type: 'POST' }); }, 3000);
        function afk(){
            $("#Answer").attr( "name", "afk" );
            clearInterval(AFKInterval);
            $("#Answer").click();
        };
    </script>
}